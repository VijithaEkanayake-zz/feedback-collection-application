version: "3"
services:
  feedback-collector-ui:
    image: vijithaekanayake/feedback-web-ui
    restart: always
    build:
      context: ./feedback-collector-ui
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    depends_on:
      - mongo
      - feedback-collector

  feedback-collector:
    image: vijithaekanayake/feedback-collector
    container_name: feedback-collector-service
    restart: always
    build:
      context: ./feedback-collector/feedback-collector-service
      dockerfile: Dockerfile
    ports:
      - 8090:8090
    depends_on:
      - mongo
      - minio
      - createbuckets

  mongo:
    image: mongo:latest
    container_name: mongo
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
    volumes:
      - ./data/db:/data/db
    ports:
      - 27017:27017

  mongoexpress:
    image: mongo-express
    restart: always
    ports:
      - "8081:8081"
    depends_on:
      - mongo

  minio:
    image: minio/minio:RELEASE.2020-06-18T02-23-35Z
    ports:
      - "9000:9000"
    volumes:
      - ./test/.minio/data:/export
      - ./test/.minio/config:/root/.minio
    environment:
      - "MINIO_ACCESS_KEY=minio"
      - "MINIO_SECRET_KEY=minio123"
    command: server /export
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add myminio https://minio:9000 minio minio123;
      /usr/bin/mc rm -r --force myminio/feedback;
      /usr/bin/mc mb myminio/feedback;
      /usr/bin/mc policy set public myminio/feedback;
      exit 0;"

volumes:
  data1: