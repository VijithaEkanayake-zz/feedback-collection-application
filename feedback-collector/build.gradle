plugins {
    id "jacoco"
}

apply from: 'versioning.gradle'
version = getCurrentVersion()


subprojects {
    apply plugin: 'java'
    sourceCompatibility = '1.8'

    buildscript {
        repositories {
            mavenCentral()
            mavenLocal()
        }
    }

    repositories {
        mavenCentral()
        maven { url 'https://repo.spring.io/libs-snapshot' }
        mavenLocal()
    }

    ext.libraries = [
            lombokVersion: "1.18.6",
            commonsVersion: "2.6",
            mapStructVersion: "1.3.0.Final",
            testngVersion: "6.11"
    ]

    dependencies {
        compile "org.mapstruct:mapstruct-jdk8:${libraries.mapStructVersion}"
        compile "org.mapstruct:mapstruct-processor:${libraries.mapStructVersion}"
        compileOnly "org.projectlombok:lombok:${libraries.lombokVersion}"
        annotationProcessor "org.projectlombok:lombok:${libraries.lombokVersion}"
        testImplementation "commons-io:commons-io:${libraries.commonsVersion}"
        annotationProcessor "org.mapstruct:mapstruct-processor:${libraries.mapStructVersion}"
    }
}

configure(subprojects.findAll { it.name == 'feedback-collector-domain' }) {
    dependencies {
        testCompile group: 'org.testng', name: 'testng', version: '6.14.3'
    }
}

configure(subprojects.findAll { it.name == 'feedback-collector-service' }) {
    buildscript {
        ext {
            springBootVersion = '2.3.1.RELEASE'
        }
        repositories {
            maven { url 'https://repo.spring.io/release' }
            mavenCentral()
            maven { url 'https://repo.spring.io/milestone' }
        }
        dependencies {
            classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        }
    }

    dependencies {
        compile project(':feedback-collector-domain')
        compile 'org.springframework.boot:spring-boot-starter-webflux'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testCompile group: 'org.testng', name: 'testng', version: '6.14.3'
        testCompile "org.testng:testng:${libraries.testngVersion}"

    }

    apply plugin: 'jacoco'
    // JACOCO COVERAGE
    jacoco {
        toolVersion = "0.8.2"
        reportsDir = file("${buildDir}/customJacocoReportDir")
    }

    test {
        useTestNG()
    }
    check.dependsOn jacocoTestCoverageVerification
}

def getCurrentVersion() {
    Properties properties = new Properties()
    properties.load(project.file('build.properties').newDataInputStream())
    def getCurrentVersion = properties.getProperty('current.version')
    return getCurrentVersion
}
